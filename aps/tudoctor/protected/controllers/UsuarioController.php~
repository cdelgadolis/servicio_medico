<?php

class UsuarioController extends Controller
{
/**
* @var string the default layout for the views. Defaults to '//layouts/column2', meaning
* using two-column layout. See 'protected/views/layouts/column2.php'.
*/
public $layout='//layouts/column2';

/**
* @return array action filters
*/
public function filters()
{
return array(
'accessControl', // perform access control for CRUD operations
);
}

public function actions()
	{
		return array(
			// captcha action renders the CAPTCHA image displayed on the contact page
			'captcha'=>array(
				'class'=>'CCaptchaAction',
				'backColor'=>0xFFFFFF,
			),
			// page action renders "static" pages stored under 'protected/views/site/pages'
			// They can be accessed via: index.php?r=site/page&view=FileName
			'page'=>array(
				'class'=>'CViewAction',
			),
		);
	}

/**
* Specifies the access control rules.
* This method is used by the 'accessControl' filter.
* @return array access control rules
*/
public function accessRules()
{
return array(
array('allow',  // allow all users to perform 'index' and 'view' actions
'actions'=>array('captcha', 'index','view','create','buscarRif'),
'users'=>array('*'),
),
array('allow', // allow authenticated user to perform 'create' and 'update' actions
'actions'=>array('admin', 'update'),
'users'=>array('@'),
),
array('allow', // allow admin user to perform 'admin' and 'delete' actions
'actions'=>array('admin','delete'),
'users'=>array('admin'),
),
array('deny',  // deny all users
'users'=>array('*'),
),
);
}

/**
* Displays a particular model.
* @param integer $id the ID of the model to be displayed
*/
public function actionView($id)
{
$this->render('view',array(
'model'=>$this->loadModel($id),
));
}



public function actionBuscarRif($rif){

$resultado = file_get_contents("http://contribuyente.seniat.gob.ve/getContribuyente/getrif?rif=$rif"); 

preg_match_all('#<\s*?rif:Nombre\b[^>]*>(.*?)</rif:Nombre\b[^>]*>#s', $resultado, $razon_social);

echo $razon_social[1][0];

}



/**
* Creates a new model.
* If creation is successful, the browser will be redirected to the 'view' page.
*/
public function actionCreate()
{
$model=new Usuario;

// Uncomment the following line if AJAX validation is needed
// $this->performAjaxValidation($model);

if(isset($_POST['Usuario']))
{
$model->attributes=$_POST['Usuario'];
$clave2=($model->clave);
$model->clave=md5($model->clave);
$model->perfil='Editor';
$model->fk_usuario_creacion=Yii::app()->user->id;
if($model->save())
//Correo
$mensaje = '<HTML>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <head>
       <title>Citas En Linea - Servicio Médico Lic. Pedro Torres</title>
    </head>
    <body style="font:0px Arial;color:#ffffff;">
        <table align=center width=800 style="font:14px Arial;color:#000000;">
       
        <tr><td><b>'.$model->nombre_razon.'</b>, reciba un cordial Saludo.</td></tr>
        
        <tr><td><b><br>El Instituto Autónomo Biblioteca Nacional y Servicios de Bibliotecas</b> le informa que hemos procesado su Registro de Usuario exitosamente, a continuación le indicamos los detalles:<br></td></tr>

        <tr><td><b><h3>-- Datos de Usuario --</h3></b></td></tr>
        <tr><td><b>USUARIO: </b> '.$model->usuario.'</td></tr>
        <tr><td><b>CLAVE: </b> '.$clave2.'</td></tr>
        <tr><td><b>CORREO PRINCIPAL: </b> '.$model->correo_ppal.'</td></tr>
        <tr><td><b>CORREO ALTERNATIVO: </b> '.$model->correo_sec.'</td></tr>
         
            <tr><td style="font:12px Arial;color:#383838;"><br><br>Este es un mensaje automático. No responda al remitente. Si desea comunicarse con nosotros puede contactarnos a través de los números telefónicos (0212)505.91.75 / (0212)505.91.76 / (0212)505.91.77, o a través del correo electrónico deposito.legalvenezuela@bnv.gob.ve</td></tr>
        </table>
    </body>
</HTML>'; 
$mail = new YiiMailer();
$mail->setFrom("No-responder@bnv.gob.ve", "Depósito Legal");
$mail->setTo($model->correo_ppal);
$mail->AddCC($model->correo_sec);
$mail->Subject="Registro de Usuario";
$mail->MsgHTML($mensaje);

if ($mail->send()) {
			    Yii::app()->user->setFlash('login','Registro de Usuario exitoso.');
			} else {
			    Yii::app()->user->setFlash('error','Error al enviar el correo electrónico: '.$mail->getError());
			}
//
//$this->redirect(array('view','id'=>$model->id_usuario));
//Yii::app()->user->setFlash('success',"Datos grabados correctamente!");
//Yii::app()->user->setFlash('success', "Tu perfil fue actualizado!");
//Yii::app()->getController()->redirect(array("/site/login"));
$this->redirect( array('/site/login') );
Yii::app()->user->setFlash('success',"Datos grabados correctamente!");
}

$this->render('create',array(
'model'=>$model,
));
}

/**
* Updates a particular model.
* If update is successful, the browser will be redirected to the 'view' page.
* @param integer $id the ID of the model to be updated
*/
public function actionUpdate($id)
{
$model=$this->loadModel($id);

// Uncomment the following line if AJAX validation is needed
// $this->performAjaxValidation($model);

if(isset($_POST['Usuario']))
{
$model->attributes=$_POST['Usuario'];
$clave2=($model->clave);
$model->clave=md5($model->clave);
$model->fk_usuario_actualizacion=Yii::app()->user->id;
if($model->save())
//Correo

$this->redirect(array('view','id'=>$model->id_usuario));
}

$this->render('update2',array(
'model'=>$model,
));
}

/**
* Deletes a particular model.
* If deletion is successful, the browser will be redirected to the 'admin' page.
* @param integer $id the ID of the model to be deleted
*/
public function actionDelete($id)
{
if(Yii::app()->request->isPostRequest)
{
// we only allow deletion via POST request
$this->loadModel($id)->delete();

// if AJAX request (triggered by deletion via admin grid view), we should not redirect the browser
if(!isset($_GET['ajax']))
$this->redirect(isset($_POST['returnUrl']) ? $_POST['returnUrl'] : array('admin'));
}
else
throw new CHttpException(400,'Invalid request. Please do not repeat this request again.');
}

/**
* Lists all models.
*/
public function actionIndex()
{
$dataProvider=new CActiveDataProvider('Usuario');
$this->render('index',array(
'dataProvider'=>$dataProvider,
));
}

/**
* Manages all models.
*/
public function actionAdmin()
{
$model=new Usuario('search');
$model->unsetAttributes();  // clear any default values
if(isset($_GET['Usuario']))
$model->attributes=$_GET['Usuario'];

$this->render('admin',array(
'model'=>$model,
));
}

/**
* Returns the data model based on the primary key given in the GET variable.
* If the data model is not found, an HTTP exception will be raised.
* @param integer the ID of the model to be loaded
*/
public function loadModel($id)
{
$model=Usuario::model()->findByPk($id);
if($model===null)
throw new CHttpException(404,'The requested page does not exist.');
return $model;
}

/**
* Performs the AJAX validation.
* @param CModel the model to be validated
*/
protected function performAjaxValidation($model)
{
if(isset($_POST['ajax']) && $_POST['ajax']==='usuario-form')
{
echo CActiveForm::validate($model);
Yii::app()->end();
}
}
}
